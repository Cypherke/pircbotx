<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="723" passed="723">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="4996" started-at="2015-07-12T21:21:44Z" finished-at="2015-07-12T21:21:49Z">
    <groups>
      <group name="ConnectTests">
        <method signature="PircBotXConnectTest.connectNoCapTest()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectNoCapTest" class="org.pircbotx.PircBotXConnectTest"/>
        <method signature="PircBotXConnectTest.connectTest()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectTest" class="org.pircbotx.PircBotXConnectTest"/>
        <method signature="PircBotXConnectTest.connectTestWithUnknownCap()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectTestWithUnknownCap" class="org.pircbotx.PircBotXConnectTest"/>
        <method signature="PircBotXConnectTest.connectWithDifferentPortTest()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectWithDifferentPortTest" class="org.pircbotx.PircBotXConnectTest"/>
        <method signature="PircBotXConnectTest.connectWithPasswordTest()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectWithPasswordTest" class="org.pircbotx.PircBotXConnectTest"/>
      </group> <!-- ConnectTests -->
    </groups>
    <test name="Surefire test" duration-ms="4996" started-at="2015-07-12T21:21:44Z" finished-at="2015-07-12T21:21:49Z">
      <class name="org.pircbotx.ConfigurationTest">
        <test-method status="PASS" signature="containSameFieldsTest()[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" name="containSameFieldsTest" duration-ms="137" started-at="2015-07-12T21:21:44Z" finished-at="2015-07-12T21:21:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containSameFieldsTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="149" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4f67eb2a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4a668b6e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isWebIrcEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2cd2a21f, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@2e55dd0c)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isWebIrcEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="44" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@e7edb54, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@69e1dd28)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isWebIrcEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@53976f5c, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@2bfc268b)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcUsername]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@29e495ff, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@41e1e210)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcUsername]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4944252c, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@44821a96)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcUsername]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="46" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@1ba9117e, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@732c2a62)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcHostname]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@41fecb8b, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@120f102b)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcHostname]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@51dcb805, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@66498326)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcHostname]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@1e6454ec, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@2accdbb5)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6631f5ca, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@5ace1ed4)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@27ff5d15, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@4e096385)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@693fe6c9, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@34f5090e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@a2431d0, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@1cbb87f3)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@1b6e1eff, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@306f16f3)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getWebIrcPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="30" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@22e357dc, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@49912c99)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@15bbf42f, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@550ee7e5)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@247d8ae, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@48974e45)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="7" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6c130c45, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@50ad3bc1)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLogin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6d3a388c, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@193f604a)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLogin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@57af006c, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@6bedbc4d)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLogin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="6" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@d29f28, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@2fd1433e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getVersion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3514a4c0, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@212b5695)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getVersion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@69997e9d, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@793be5ca)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getVersion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="5" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@37654521, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@15aab8c6)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getFinger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4de4b452, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@50b5ac82)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getFinger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6babf3bf, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@3059cbc)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getFinger]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@24fcf36f, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@10feca44)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getRealName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@ea6147e, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4d02f94e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getRealName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="4" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@1e683a3e, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@2053d869)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getRealName]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@14555e0a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4bb33f74)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getChannelPrefixes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3c73951, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@3d5c822d)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getChannelPrefixes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="4" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@73700b80, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@49c7b90e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getChannelPrefixes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4d5b6aac, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@3e84448c)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getUserLevelPrefixes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@429bffaa, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@5403f35f)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getUserLevelPrefixes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@7e5afaa6, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@63a12c68)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getUserLevelPrefixes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@1b1426f4, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@32b260fa)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isSnapshotsEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6d4e5011, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@57d7f8ca)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isSnapshotsEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@78123e82, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@67c33749)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isSnapshotsEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="4" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@662b4c69, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@fa49800)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isDccFilenameQuotes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2a54a73f, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@16a0ee18)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isDccFilenameQuotes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@505fc5a4, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@5fbdfdcf)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isDccFilenameQuotes]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@bd4dc25, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@25084a1e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccPorts]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3bf9ce3e, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@16610890)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccPorts]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@383bfa16, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@4d465b11)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccPorts]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="4" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@5562c41e, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@32ee6fee)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccLocalAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="5" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3232a28a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@73e22a3d)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccLocalAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@f736069, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@6da21078)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccLocalAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@56cdfb3b, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@2b91004a)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccAcceptTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2fb3536e, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@169e6180)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccAcceptTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@7205765b, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@47987356)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccAcceptTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6283d8b8, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@3b6ddd1d)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccResumeAcceptTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@611889f4, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@1da2cb77)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccResumeAcceptTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2f217633, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@a530d0a)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccResumeAcceptTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="7" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@5acf93bb, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@7e7be63f)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccTransferBufferSize]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@614ca7df, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4738a206)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccTransferBufferSize]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@1e04fa0a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@1af2d44a)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getDccTransferBufferSize]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@618425b5, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@58695725)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isDccPassiveRequest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@f5acb9d, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4fb3ee4e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isDccPassiveRequest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@25fb8912, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@7c24b813)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isDccPassiveRequest]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@7bd4937b, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@21e360a)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getServers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@58d75e99, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@74751b3)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getServers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@306e95ec, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@52af26ee)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getServers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4f2b503c, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@bae7dc0)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getServerPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@e15b7e8, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@1b2abca6)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getServerPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2ed2d9cb, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@d5b810e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getServerPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@342c38f8, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@c88a337)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getSocketFactory]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@485966cc, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@1de76cc7)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getSocketFactory]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="4" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@593aaf41, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@5a56cdac)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getSocketFactory]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@57cf54e1, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@5b03b9fe)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLocalAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="5" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@434a63ab, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@6e0f5f7f)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLocalAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3ee37e5a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@2ea41516)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLocalAddress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3c7f66c4, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@194bcebf)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getEncoding]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@f0da945, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4803b726)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getEncoding]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@53ce1329, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@316bcf94)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getEncoding]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3e11f9e9, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@1de5f259)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLocale]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@31fa1761, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@957e06)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLocale]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2c1b194a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@4dbb42b7)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getLocale]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@550dbc7a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@21282ed8)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getSocketTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@7bab3f1a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@437da279)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getSocketTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@1e1a0406, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@3cebbb30)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getSocketTimeout]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@290222c1, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@67f639d3)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getMaxLineLength]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@49049a04, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@71a8adcf)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getMaxLineLength]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@82de64a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@659499f1)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getMaxLineLength]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@47e2e487, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@201a4587)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoSplitMessage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4310d43, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@54a7079e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoSplitMessage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@47d9a273, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@4b8ee4de)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoSplitMessage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="63" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@1b11171f, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@1151e434)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoNickChange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4659191b, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@55634720)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoNickChange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4c1909a3, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@428640fa)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoNickChange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2d710f1a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@29215f06)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getMessageDelay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="21" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4efac082, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@6bd61f98)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getMessageDelay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@13fd2ccd, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@b9b00e0)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getMessageDelay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@7d4f9aae, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@72e5a8e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isShutdownHookEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@53aac487, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@52b1beb6)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isShutdownHookEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@7db12bb6, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@783a467b)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isShutdownHookEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@73e9cf30, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@771a660)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoJoinChannels]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@242b836, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@3f6f6701)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoJoinChannels]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@942a29c, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@1ed6388a)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoJoinChannels]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@534a5a98, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4f80542f)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isIdentServerEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@121314f7, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@130c12b7)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isIdentServerEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@576d5deb, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@5d534f5d)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isIdentServerEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@70e9c95d, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4d5650ae)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6fdbe764, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@51c668e3)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6221a451, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@52719fb6)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@4a883b15, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@25641d39)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservOnSuccess]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@5824a83d, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@537f60bf)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservOnSuccess]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@18df8434, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@65c7a252)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservOnSuccess]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@229c6181, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@4686afc2)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservNick]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@791f145a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@38cee291)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservNick]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:46Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@f09733f, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@e350b40)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getNickservNick]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="31" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:46Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2794eab6, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@6340e5f0)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isNickservDelayJoin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@6574a52c, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@6c1a5b54)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isNickservDelayJoin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@60099951, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@20140db9)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isNickservDelayJoin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@368247b9, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@1a6d8329)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoReconnect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="20" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@55a147cc, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@71ba6d4e)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoReconnect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3c77d488, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@63376bed)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isAutoReconnect]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@d86a6f, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@2892d68)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoReconnectDelay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3646a422, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@750e2b97)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoReconnectDelay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2e385cce, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@2ddc9a9f)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoReconnectDelay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@2a7f1f10, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@46cdf8bd)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoReconnectAttempts]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="6" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@740cae06, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@26d9b808)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoReconnectAttempts]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="10" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@644baf4a, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@7526515b)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getAutoReconnectAttempts]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@54c5a2ff, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@6d4d66d2)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getListenerManager]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@11392934, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@6892b3b6)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getListenerManager]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="10" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@76a4ebf2, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@2e8c1c9b)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getListenerManager]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@449a4f23, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@1530c739)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isCapEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@78e4deb0, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@6e9175d8)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isCapEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@15bb5034, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@4b741d6d)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[isCapEnabled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="42" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@8f2ef19, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@470734c3)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getCapHandlers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@7674f035, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@69e153c5)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getCapHandlers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="9" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@25ce9dc4, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@74ea2410)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getCapHandlers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@76b1e9b8, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@27406a17)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getChannelModeHandlers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@248e319b, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@5d0bf09b)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getChannelModeHandlers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@3e8c3cb, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@563f38c4)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getChannelModeHandlers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@54422e18, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@117159c0)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getBotFactory]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration.Builder(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], serverPassword=null, socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservPassword=null, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@7ef82753, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers=[ChannelModeHandler(mode=o), ChannelModeHandler(mode=v), ChannelModeHandler(mode=h), ChannelModeHandler(mode=a), ChannelModeHandler(mode=q), ChannelModeHandler(mode=k), ChannelModeHandler(mode=l), ChannelModeHandler(mode=b), ChannelModeHandler(mode=t), ChannelModeHandler(mode=n), ChannelModeHandler(mode=i), ChannelModeHandler(mode=m), ChannelModeHandler(mode=p), ChannelModeHandler(mode=s)], botFactory=org.pircbotx.Configuration$BotFactory@3b0fe47a)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getBotFactory]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
        <test-method name="copyConstructorTest" signature="copyConstructorTest(java.lang.Class, java.lang.Class, java.lang.Object, java.lang.String)[pri:0, instance:org.pircbotx.ConfigurationTest@57e1b0c]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.ConfigurationTest.containSameFieldsTest" data-provider="fieldNamesDataProvider" description="Make sure every getter in builder gets called when creating Configuration">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.Configuration$Builder]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.Configuration]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Configuration(webIrcEnabled=false, webIrcUsername=null, webIrcHostname=null, webIrcAddress=null, webIrcPassword=null, name=PircBotXBot, login=PircBotX, version=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, finger=You ought to be arrested for fingering a bot!, realName=PircBotX 2.1-SNAPSHOT Java IRC bot - pircbotx.googlecode.com, channelPrefixes=#&+!, userLevelPrefixes=+@%&~!, snapshotsEnabled=true, dccFilenameQuotes=false, dccPorts=[], dccLocalAddress=null, dccAcceptTimeout=300000, dccResumeAcceptTimeout=300000, dccTransferBufferSize=1024, dccPassiveRequest=false, servers=[127.1.1.1:6667], socketFactory=javax.net.DefaultSocketFactory@1fb700ee, localAddress=null, encoding=UTF-8, locale=en_US, socketTimeout=300000, maxLineLength=512, autoSplitMessage=true, autoNickChange=true, messageDelay=0, shutdownHookEnabled=false, autoJoinChannels={}, identServerEnabled=false, nickservOnSuccess=you are now, nickservNick=nickserv, nickservDelayJoin=false, autoReconnect=false, autoReconnectDelay=0, autoReconnectAttempts=5, listenerManager=org.pircbotx.hooks.managers.GenericListenerManager@235ecd9f, capEnabled=true, capHandlers=[EnableCapHandler(cap=multi-prefix, ignoreFail=true), EnableCapHandler(cap=away-notify, ignoreFail=true)], channelModeHandlers={a=ChannelModeHandler(mode=a), b=ChannelModeHandler(mode=b), h=ChannelModeHandler(mode=h), i=ChannelModeHandler(mode=i), k=ChannelModeHandler(mode=k), l=ChannelModeHandler(mode=l), m=ChannelModeHandler(mode=m), n=ChannelModeHandler(mode=n), o=ChannelModeHandler(mode=o), p=ChannelModeHandler(mode=p), q=ChannelModeHandler(mode=q), s=ChannelModeHandler(mode=s), t=ChannelModeHandler(mode=t), v=ChannelModeHandler(mode=v)}, botFactory=org.pircbotx.Configuration$BotFactory@1ca3b418)]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[getBotFactory]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyConstructorTest -->
      </class> <!-- org.pircbotx.ConfigurationTest -->
      <class name="org.pircbotx.CAPTest">
        <test-method status="PASS" signature="resetCapHandlers()[pri:0, instance:org.pircbotx.CAPTest@1877ab81]" name="resetCapHandlers" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCapHandlers -->
        <test-method status="PASS" signature="EnableTest()[pri:0, instance:org.pircbotx.CAPTest@1877ab81]" name="EnableTest" duration-ms="4" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnableTest -->
        <test-method status="PASS" signature="SASLTest()[pri:0, instance:org.pircbotx.CAPTest@1877ab81]" name="SASLTest" duration-ms="9" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SASLTest -->
        <test-method status="PASS" signature="resetCapHandlers()[pri:0, instance:org.pircbotx.CAPTest@1877ab81]" name="resetCapHandlers" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetCapHandlers -->
      </class> <!-- org.pircbotx.CAPTest -->
      <class name="org.pircbotx.InputParserTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="actionTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="actionTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify ActionEvent from /me from a user in a channel" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#aChannel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- actionTest -->
        <test-method status="PASS" signature="awayNotifyMessageEmptyTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="awayNotifyMessageEmptyTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- awayNotifyMessageEmptyTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="actionTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="actionTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify ActionEvent from /me from a user in a channel" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PircBotXUser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- actionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="awayNotifyMessageMissingTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="awayNotifyMessageMissingTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- awayNotifyMessageMissingTest -->
        <test-method status="PASS" signature="awayNotifyTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="awayNotifyTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- awayNotifyTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="awayTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="awayTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- awayTest -->
        <test-method status="PASS" signature="banExtbanListTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="banExtbanListTest" duration-ms="4" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- banExtbanListTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="banListTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="banListTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- banListTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelCreationDateFreenode()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelCreationDateFreenode" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify Channel creation date is set - Freenode" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelCreationDateFreenode -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="6" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+l 10]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+lxyz 10]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdel 10]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdelxyz 10]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="8" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-l]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[l 10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-lxyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[l 10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdel]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[l 10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdelxyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[l 10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+k testPassword]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+kxyz testPassword]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdek testPassword]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdekxyz testPassword]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-k]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[k testPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-kxyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[k testPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="3" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdek]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[k testPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdekxyz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[k testPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-k testPassword]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[k testPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="5" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-kxyz testPassword]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[k testPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="12" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdek testPassword]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[k testPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdekxyz testPassword]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[k testPassword]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+i]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+ixyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdei]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdeixyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-i]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-ixyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdei]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdeixyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+n]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+nxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cden]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdenxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-n]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="4" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-nxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="12" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cden]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdenxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+s]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdes]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+sxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdesxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-s]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="5" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-sxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdes]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdesxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+t]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+txyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdetxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdet]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-t]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdet]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-txyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+p]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdetxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+pxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdep]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+cdepxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-p]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="5" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="5" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-pxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdep]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="channelModeChangeTest(java.lang.String, java.lang.String, java.lang.Class)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeChangeTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" data-provider="channelModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-cdepxyz]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelModeMessageTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelModeMessageTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelModeMessageTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="6" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="5" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+o]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OpEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[isOp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-o]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OpEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[isOp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-v]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VoiceEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hasVoice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+v]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VoiceEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hasVoice]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+q]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OwnerEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[isOwner]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-q]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OwnerEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[isOwner]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+h]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.HalfOpEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[isHalfOp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-h]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.HalfOpEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[isHalfOp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[+a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SuperOpEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[isSuperOp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="channelUserModeTest(java.lang.String, java.lang.Class, java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="channelUserModeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Test setting various user modes and verifying events" data-provider="channelUserModeProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SuperOpEvent]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[isSuperOp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelUserModeTest -->
        <test-method status="PASS" signature="containsModeTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="containsModeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- containsModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="fingerTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="fingerTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify FingerEvent from a user" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#aChannel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fingerTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="fingerTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="fingerTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify FingerEvent from a user" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PircBotXUser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fingerTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="inviteTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="inviteTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verifies InviteEvent from incomming invite" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inviteTest -->
        <test-method status="PASS" signature="insensitiveLookupTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="insensitiveLookupTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verifies DAO allows case insensitive lookups" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insensitiveLookupTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="joinTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="joinTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verifies JoinEvent from user joining our channel" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- joinTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="listTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="listTest" duration-ms="3" started-at="2015-07-12T21:21:48Z" description="Verifies ChannelInfoEvent from /LIST command with 3 channels" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="messageTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="messageTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify MessageEvent from channel message" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- messageTest -->
        <test-method status="PASS" signature="modeRecipientWithGlobHostmask()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="modeRecipientWithGlobHostmask" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modeRecipientWithGlobHostmask -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="modeResponseTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="modeResponseTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- modeResponseTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="motdTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="motdTest" duration-ms="3" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- motdTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="namesTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="namesTest" duration-ms="9" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- namesTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nickAlreadyInUseTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickAlreadyInUseTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickAlreadyInUseTest -->
        <test-method status="PASS" signature="nickChangeBotTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickChangeBotTest" duration-ms="4" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickChangeBotTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nickChangeOtherTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickChangeOtherTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickChangeOtherTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nickDifferentTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickDifferentTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="nickDifferentTestProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickDifferentTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nickDifferentTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickDifferentTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="nickDifferentTestProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickDifferentTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nickDifferentTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickDifferentTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="nickDifferentTestProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[003]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickDifferentTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nickDifferentTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickDifferentTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" data-provider="nickDifferentTestProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[004]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickDifferentTest -->
        <test-method status="PASS" signature="nickRenamePartTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickRenamePartTest" duration-ms="11" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickRenamePartTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="nickRenameQuitTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickRenameQuitTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickRenameQuitTest -->
        <test-method status="PASS" signature="nickRenameWithQuitTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="nickRenameWithQuitTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickRenameWithQuitTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="noticeTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="noticeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify NoticeEvent from NOTICE" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#aChannel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noticeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="noticeTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="noticeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify NoticeEvent from NOTICE" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PircBotXUser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noticeTest -->
        <test-method status="PASS" signature="pingTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="pingTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify PingEvent from a user" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#aChannel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pingTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="privateMessageTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="privateMessageTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify PrivateMessage from random user" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- privateMessageTest -->
        <test-method status="PASS" signature="pingTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="pingTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify PingEvent from a user" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PircBotXUser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pingTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="quitWithMessageTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="quitWithMessageTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" description="Verify QuitEvent from user that just joined quitting" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitWithMessageTest -->
        <test-method status="PASS" signature="serverPingTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="serverPingTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- serverPingTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setChannelLimitModeEvent()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setChannelLimitModeEvent" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify SetChannelLimitEvent has the correct limit" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setChannelLimitModeEvent -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="timeTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="timeTest" duration-ms="5" started-at="2015-07-12T21:21:48Z" description="Verify TimeEvent from a user" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#aChannel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="timeTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="timeTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify TimeEvent from a user" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PircBotXUser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- timeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="topicChangeTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="topicChangeTest" duration-ms="7" started-at="2015-07-12T21:21:48Z" description="Verify TopicEvent by user changing topic" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicChangeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="topicInfoFullHostmaskTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="topicInfoFullHostmaskTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify TopicEvent&#039;s extended information from line sent after TOPIC line" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicInfoFullHostmaskTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="topicInfoTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="topicInfoTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify TopicEvent&#039;s extended information from line sent after TOPIC line" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicInfoTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="topicResponseTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="topicResponseTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify TopicEvent from /JOIN or /TOPIC #channel commands" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topicResponseTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="userDataBotTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="userDataBotTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userDataBotTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="4" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="userModeInitTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="userModeInitTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userModeInitTest -->
        <test-method status="PASS" signature="userModeTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="userModeTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verifies UserModeEvent from user mode being changed" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="versionTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="versionTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify VersionEvent from a user" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[#aChannel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- versionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="versionTest(java.lang.String)[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="versionTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify VersionEvent from a user" data-provider="channelOrUserDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[PircBotXUser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- versionTest -->
        <test-method status="PASS" signature="whoTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify WHO response handling + UserListEvent" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="whoTestFalseChannels()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoTestFalseChannels" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Veryfy that we don&#039;t falsely registers all WHO responses as valid channels" finished-at="2015-07-12T21:21:48Z">
          <exception class="org.pircbotx.exception.DaoException">
            <message>
              <![CDATA[UnknownChannel: #randomChannel]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.pircbotx.exception.DaoException: UnknownChannel: #randomChannel
	at org.pircbotx.UserChannelDao.getChannel(UserChannelDao.java:348)
	at org.pircbotx.InputParser.processServerResponse(InputParser.java:722)
	at org.pircbotx.InputParser.handleLine(InputParser.java:362)
	at org.pircbotx.InputParserTest.whoTestFalseChannels(InputParserTest.java:719)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.pircbotx.exception.DaoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoTestFalseChannels -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="whoisCaseInsensitiveTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoisCaseInsensitiveTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoisCaseInsensitiveTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="whoisNoChannelsTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoisNoChannelsTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoisNoChannelsTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="whoisInvalidUserTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoisInvalidUserTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoisInvalidUserTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="whoisRegistered330NameTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoisRegistered330NameTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoisRegistered330NameTest -->
        <test-method status="PASS" signature="whoisRegistered307Test()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoisRegistered307Test" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoisRegistered307Test -->
        <test-method status="PASS" signature="whoisRegistered330NoNameTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoisRegistered330NoNameTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoisRegistered330NoNameTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="whoisTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="whoisTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whoisTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="kickTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="kickTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify KickEvent from some user kicking another user" depends-on-methods="org.pircbotx.InputParserTest.joinTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- kickTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="partWithMessageTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="partWithMessageTest" duration-ms="19" started-at="2015-07-12T21:21:49Z" description="Verify part with message" depends-on-methods="org.pircbotx.InputParserTest.joinTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partWithMessageTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="quitWithoutMessageAndColonTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="quitWithoutMessageAndColonTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify QuitEvent with no message" depends-on-methods="org.pircbotx.InputParserTest.quitWithMessageTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitWithoutMessageAndColonTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="quitWithoutMessageTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="quitWithoutMessageTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify QuitEvent with no message" depends-on-methods="org.pircbotx.InputParserTest.quitWithMessageTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitWithoutMessageTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="removeChannelKeyEventEmptyTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="removeChannelKeyEventEmptyTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify RemoveChannelKeyEvent has a null key when not specified" depends-on-methods="org.pircbotx.InputParserTest.channelModeChangeTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeChannelKeyEventEmptyTest -->
        <test-method status="PASS" signature="removeChannelKeyEventTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="removeChannelKeyEventTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify RemoveChannelKeyEvent has the correct key" depends-on-methods="org.pircbotx.InputParserTest.channelModeChangeTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeChannelKeyEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="removeChannelLimitEmptyEvent()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="removeChannelLimitEmptyEvent" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify RemoveChannelLimitEvent has the correct limit" depends-on-methods="org.pircbotx.InputParserTest.channelModeChangeTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeChannelLimitEmptyEvent -->
        <test-method status="PASS" signature="removeChannelLimitEvent()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="removeChannelLimitEvent" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify RemoveChannelLimitEvent has the correct limit" depends-on-methods="org.pircbotx.InputParserTest.channelModeChangeTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeChannelLimitEvent -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setChannelKeyEventTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setChannelKeyEventTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify SetChannelKeyEvent has the correct key" depends-on-methods="org.pircbotx.InputParserTest.channelModeChangeTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setChannelKeyEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setChannelKeyModeTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setChannelKeyModeTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify Channel has the correct key" depends-on-methods="org.pircbotx.InputParserTest.channelModeChangeTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setChannelKeyModeTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setChannelLimitEvent()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setChannelLimitEvent" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify SetChannelLimitEvent has the correct limit" depends-on-methods="org.pircbotx.InputParserTest.channelModeChangeTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setChannelLimitEvent -->
        <test-method status="PASS" signature="partUs()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="partUs" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify part with us" depends-on-methods="org.pircbotx.InputParserTest.partWithMessageTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partUs -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="partWithoutMessageAndColonTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="partWithoutMessageAndColonTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify part without message" depends-on-methods="org.pircbotx.InputParserTest.partWithMessageTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partWithoutMessageAndColonTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="partWithoutMessageTest()[pri:0, instance:org.pircbotx.InputParserTest@4493d195]" name="partWithoutMessageTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify part without message" depends-on-methods="org.pircbotx.InputParserTest.partWithMessageTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partWithoutMessageTest -->
      </class> <!-- org.pircbotx.InputParserTest -->
      <class name="org.pircbotx.output.OutputTest">
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="74" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendInviteStringTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendInviteStringTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendInvite by string" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendInviteStringTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="4" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendMessageUserInterfaceTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendMessageUserInterfaceTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" description="Verify sendMessage to user through generic Interface" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageUserInterfaceTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="6" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendRawLineSplitShort()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendRawLineSplitShort" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendRawLineSplit works correctly with short strings" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendRawLineSplitShort -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendMessageStringTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendMessageStringTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendMessage by string" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageStringTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="8" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendCTCPCommandStringTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendCTCPCommandStringTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify sendCTCPCommand by string" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendCTCPCommandStringTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="3" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendMessageChannelInterfaceTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendMessageChannelInterfaceTest" duration-ms="2" started-at="2015-07-12T21:21:48Z" description="Verify sendMessage to channel through generic Interface" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageChannelInterfaceTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="8" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="8" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendMessageChannelTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendMessageChannelTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendMessage to channel" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageChannelTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendInviteUserChannelTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendInviteUserChannelTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendInvite to user" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendInviteUserChannelTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendCTCPCommandUserTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendCTCPCommandUserTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendCTCPCommand to user" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendCTCPCommandUserTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="3" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendMessageChannelUserTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendMessageChannelUserTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendMessage to user in channel" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageChannelUserTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="8" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendActionUserInterfaceTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendActionUserInterfaceTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendAction to user through generic Interface" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendActionUserInterfaceTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendActionUserTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendActionUserTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify sendAction to user" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendActionUserTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="8" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendActionChannelInterfaceTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendActionChannelInterfaceTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify sendAction to channel through generic Interface" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendActionChannelInterfaceTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="6" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendInviteChannelUserTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendInviteChannelUserTest" duration-ms="8" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendInviteChannelUserTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="5" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendMessageUserTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendMessageUserTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendMessage to user" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageUserTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="5" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendRawLineTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendRawLineTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendRawLine works correctly" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendRawLineTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="5" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendInviteUserStringTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendInviteUserStringTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify sendInvite to channel by string" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendInviteUserStringTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="9" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendNoticeUserTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendNoticeUserTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendNotice to user" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendNoticeUserTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendCTCPResponseUserTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendCTCPResponseUserTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify sendCTCPResponse to user" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendCTCPResponseUserTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="4" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendActionChannelTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendActionChannelTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify sendAction to channel" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendActionChannelTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendCTCPCommandChannelTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendCTCPCommandChannelTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendCTCPCommand to channel" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendCTCPCommandChannelTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="3" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendNoticeStringTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendNoticeStringTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendNotice by String" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendNoticeStringTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendQuit()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendQuit" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQuit -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="7" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendNoticeUserInterfaceTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendNoticeUserInterfaceTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify sendNotice to user through generic Interface" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendNoticeUserInterfaceTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="3" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="3" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendInviteChannelStringTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendInviteChannelStringTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendInviteChannelStringTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendRawLineNowTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendRawLineNowTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendRawLineNow works correctly" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendRawLineNowTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="9" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendNoticeChannelInterfaceTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendNoticeChannelInterfaceTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendNotice to channel through generic Interface" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendNoticeChannelInterfaceTest -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendQuitMessage()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendQuitMessage" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendQuitMessage -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="5" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="sendActionStringTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendActionStringTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendAction by string" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendActionStringTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="3" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendCTCPResponseStringTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendCTCPResponseStringTest" duration-ms="1" started-at="2015-07-12T21:21:48Z" description="Verify sendCTCPResponse by string" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendCTCPResponseStringTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendInviteChannelChannelTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendInviteChannelChannelTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendInvite to channel" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendInviteChannelChannelTest -->
        <test-method status="PASS" signature="botSetup()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="botSetup" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botSetup -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="cleanUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="sendNoticeChannelTest()[pri:0, instance:org.pircbotx.output.OutputTest@6acdbdf5]" name="sendNoticeChannelTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" description="Verify sendNotice to channel" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendNoticeChannelTest -->
      </class> <!-- org.pircbotx.output.OutputTest -->
      <class name="org.pircbotx.UtilSSLSocketFactoryTest">
        <test-method status="PASS" signature="combineTestIllegal1()[pri:0, instance:org.pircbotx.UtilSSLSocketFactoryTest@646d64ab]" name="combineTestIllegal1" duration-ms="306" started-at="2015-07-12T21:21:46Z" finished-at="2015-07-12T21:21:46Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Cannot combine trustAllCertificates() and disableDiffieHellman(SSLSocketFactory)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Cannot combine trustAllCertificates() and disableDiffieHellman(SSLSocketFactory)
	at org.pircbotx.UtilSSLSocketFactory.trustAllCertificates(UtilSSLSocketFactory.java:78)
	at org.pircbotx.UtilSSLSocketFactoryTest.combineTestIllegal1(UtilSSLSocketFactoryTest.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- combineTestIllegal1 -->
        <test-method status="PASS" signature="combineTestIllegal2()[pri:0, instance:org.pircbotx.UtilSSLSocketFactoryTest@646d64ab]" name="combineTestIllegal2" duration-ms="2" started-at="2015-07-12T21:21:46Z" finished-at="2015-07-12T21:21:46Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Cannot combine trustAllCertificates() and disableDiffieHellman(SSLSocketFactory)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Cannot combine trustAllCertificates() and disableDiffieHellman(SSLSocketFactory)
	at org.pircbotx.UtilSSLSocketFactory.disableDiffieHellman(UtilSSLSocketFactory.java:124)
	at org.pircbotx.UtilSSLSocketFactoryTest.combineTestIllegal2(UtilSSLSocketFactoryTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- combineTestIllegal2 -->
        <test-method status="PASS" signature="combineTestLegal()[pri:0, instance:org.pircbotx.UtilSSLSocketFactoryTest@646d64ab]" name="combineTestLegal" duration-ms="1" started-at="2015-07-12T21:21:46Z" finished-at="2015-07-12T21:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- combineTestLegal -->
        <test-method status="PASS" signature="delegatesAllMethods()[pri:0, instance:org.pircbotx.UtilSSLSocketFactoryTest@646d64ab]" name="delegatesAllMethods" duration-ms="18" started-at="2015-07-12T21:21:46Z" finished-at="2015-07-12T21:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delegatesAllMethods -->
      </class> <!-- org.pircbotx.UtilSSLSocketFactoryTest -->
      <class name="org.pircbotx.hooks.TemporaryListenerTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.hooks.TemporaryListenerTest@704a52ec]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="eventDispatched()[pri:0, instance:org.pircbotx.hooks.TemporaryListenerTest@704a52ec]" name="eventDispatched" duration-ms="2" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventDispatched -->
        <test-method status="PASS" signature="listenerGetsRemoved()[pri:0, instance:org.pircbotx.hooks.TemporaryListenerTest@704a52ec]" name="listenerGetsRemoved" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listenerGetsRemoved -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.hooks.TemporaryListenerTest@704a52ec]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.pircbotx.hooks.TemporaryListenerTest -->
      <class name="org.pircbotx.IdentServerTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="setup" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="IdentFailInvalidAddressTest()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="IdentFailInvalidAddressTest" duration-ms="16" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IdentFailInvalidAddressTest -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="cleanup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="setup" is-config="true" duration-ms="9" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="IdentFailInvalidLocalPortTest()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="IdentFailInvalidLocalPortTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IdentFailInvalidLocalPortTest -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="cleanup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
        <test-method status="PASS" signature="IdentFailInvalidRemotePortTest()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="IdentFailInvalidRemotePortTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IdentFailInvalidRemotePortTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="IdentSuccessTest()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="IdentSuccessTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IdentSuccessTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="cleanup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
        <test-method status="PASS" signature="cleanup()[pri:0, instance:org.pircbotx.IdentServerTest@4232c52b]" name="cleanup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- org.pircbotx.IdentServerTest -->
      <class name="org.pircbotx.UserChannelDaoTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="channelExistsTest()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="channelExistsTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Make sure channelExists works" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelExistsTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getChannelInvalidTest()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="getChannelInvalidTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <exception class="org.pircbotx.exception.DaoException">
            <message>
              <![CDATA[UnknownChannel: #randomChannel]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.pircbotx.exception.DaoException: UnknownChannel: #randomChannel
	at org.pircbotx.UserChannelDao.getChannel(UserChannelDao.java:348)
	at org.pircbotx.UserChannelDaoTest.getChannelInvalidTest(UserChannelDaoTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.pircbotx.exception.DaoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChannelInvalidTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getUserByHostmaskFull()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="getUserByHostmaskFull" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserByHostmaskFull -->
        <test-method status="PASS" signature="getUserInvalidTest()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="getUserInvalidTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Make sure getting the wrong user gives an exception" finished-at="2015-07-12T21:21:49Z">
          <exception class="org.pircbotx.exception.DaoException">
            <message>
              <![CDATA[UnknownUser: RandomInvalidUser]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.pircbotx.exception.DaoException: UnknownUser: RandomInvalidUser
	at org.pircbotx.UserChannelDao.getUser(UserChannelDao.java:99)
	at org.pircbotx.UserChannelDaoTest.getUserInvalidTest(UserChannelDaoTest.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:205)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:108)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.pircbotx.exception.DaoException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInvalidTest -->
        <test-method status="PASS" signature="getChannelValidTest()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="getChannelValidTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Make sure channel doesn&#039;t return null and reliably returns the correct value" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getChannelValidTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="userEqualsAndHashCodeTest()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="userEqualsAndHashCodeTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEqualsAndHashCodeTest -->
        <test-method status="PASS" signature="userExistsTest()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="userExistsTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Make sure userExists works" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userExistsTest -->
        <test-method status="PASS" signature="getUserValidTest()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="getUserValidTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserValidTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="userHostmaskEqualsAndHashCodeTest()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="userHostmaskEqualsAndHashCodeTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userHostmaskEqualsAndHashCodeTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.UserChannelDaoTest@e320068]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.pircbotx.UserChannelDaoTest -->
      <class name="org.pircbotx.UtilsTest">
        <test-method status="PASS" signature="tokenizeChannelMessageTest(java.lang.String)[pri:0, instance:org.pircbotx.UtilsTest@59e5ddf]" name="tokenizeChannelMessageTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="suffixDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenizeChannelMessageTest -->
        <test-method status="PASS" signature="tokenizeChannelMessageTest(java.lang.String)[pri:0, instance:org.pircbotx.UtilsTest@59e5ddf]" name="tokenizeChannelMessageTest" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="suffixDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[    ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenizeChannelMessageTest -->
        <test-method status="PASS" signature="tokenizePing(java.lang.String)[pri:0, instance:org.pircbotx.UtilsTest@59e5ddf]" name="tokenizePing" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="suffixDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenizePing -->
        <test-method status="PASS" signature="tokenizePing(java.lang.String)[pri:0, instance:org.pircbotx.UtilsTest@59e5ddf]" name="tokenizePing" duration-ms="0" started-at="2015-07-12T21:21:48Z" data-provider="suffixDataProvider" finished-at="2015-07-12T21:21:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[    ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tokenizePing -->
      </class> <!-- org.pircbotx.UtilsTest -->
      <class name="org.pircbotx.dcc.DCCTest">
        <test-method status="PASS" signature="checkIPv6Support()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="checkIPv6Support" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="This will fail if you don&#039;t have IPv6 support" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkIPv6Support -->
        <test-method status="PASS" signature="addressToIntegerTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="addressToIntegerTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[192.168.21.6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3232240902]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressToIntegerTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="addressToIntegerTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="addressToIntegerTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[127.0.0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2130706433]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressToIntegerTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="addressToIntegerTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="addressToIntegerTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.221.45.21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1272786197]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressToIntegerTest -->
        <test-method status="PASS" signature="addressToIntegerTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="addressToIntegerTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2001:0db8:85a3:0000:0000:8a2e:0370:7334]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2001:db8:85a3:0:0:8a2e:370:7334]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressToIntegerTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="addressToIntegerTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="addressToIntegerTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fe80:0:0:0:202:b3ff:fe1e:8329]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fe80:0:0:0:202:b3ff:fe1e:8329]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressToIntegerTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="addressToIntegerTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="addressToIntegerTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fe80::202:b3ff:fe1e:5329]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fe80:0:0:0:202:b3ff:fe1e:5329]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addressToIntegerTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="incommingDccChatTest()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="incommingDccChatTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- incommingDccChatTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="integerToAddressTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="integerToAddressTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[192.168.21.6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3232240902]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerToAddressTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="integerToAddressTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="integerToAddressTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[127.0.0.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2130706433]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerToAddressTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="integerToAddressTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="integerToAddressTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[75.221.45.21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1272786197]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerToAddressTest -->
        <test-method status="PASS" signature="integerToAddressTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="integerToAddressTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2001:0db8:85a3:0000:0000:8a2e:0370:7334]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2001:db8:85a3:0:0:8a2e:370:7334]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerToAddressTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="integerToAddressTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="integerToAddressTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fe80::202:b3ff:fe1e:5329]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fe80:0:0:0:202:b3ff:fe1e:5329]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerToAddressTest -->
        <test-method status="PASS" signature="sendChatEventNormalTest()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="sendChatEventNormalTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendChatEventNormalTest -->
        <test-method status="PASS" signature="integerToAddressTest(java.lang.String, java.lang.String)[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="integerToAddressTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" data-provider="addressDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[fe80:0:0:0:202:b3ff:fe1e:8329]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fe80:0:0:0:202:b3ff:fe1e:8329]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- integerToAddressTest -->
        <test-method status="PASS" signature="sendChatEventTokenTest()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="sendChatEventTokenTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendChatEventTokenTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="sendFileEventNormalTest()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="sendFileEventNormalTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendFileEventNormalTest -->
        <test-method status="PASS" signature="sendFileEventTokenTest()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="sendFileEventTokenTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendFileEventTokenTest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.dcc.DCCTest@1f57539]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.pircbotx.dcc.DCCTest -->
      <class name="org.pircbotx.ColorsTest">
        <test-method status="PASS" signature="lookupTableTest()[pri:0, instance:org.pircbotx.ColorsTest@536aaa8d]" name="lookupTableTest" duration-ms="3" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lookupTableTest -->
      </class> <!-- org.pircbotx.ColorsTest -->
      <class name="org.pircbotx.NickservTest">
        <test-method status="PASS" signature="nickservOtherNickTest()[pri:0, instance:org.pircbotx.NickservTest@48503868]" name="nickservOtherNickTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickservOtherNickTest -->
        <test-method status="PASS" signature="nickservTest()[pri:0, instance:org.pircbotx.NickservTest@48503868]" name="nickservTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickservTest -->
        <test-method status="PASS" signature="nickservCustomMessageTest()[pri:0, instance:org.pircbotx.NickservTest@48503868]" name="nickservCustomMessageTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nickservCustomMessageTest -->
      </class> <!-- org.pircbotx.NickservTest -->
      <class name="org.pircbotx.hooks.events.MassEventTest">
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.BanListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ChannelInfoEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ActionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectAttemptFailedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MotdEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.FingerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.InviteEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.KickEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingChatRequestEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.DisconnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.HalfOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingFileTransferEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.JoinEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OwnerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OutputEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickChangeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NoticeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.QuitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickAlreadyInUseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PrivateMessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PartEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerPingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerResponseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SuperOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SocketConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TopicEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UnknownEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VersionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TimeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.WhoisEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method status="PASS" signature="singleConstructorTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" name="singleConstructorTest" duration-ms="0" started-at="2015-07-12T21:21:49Z" description="Verify event has a single constructor" data-provider="eventObjectDataProvider" finished-at="2015-07-12T21:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VoiceEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleConstructorTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ActionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.BanListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ChannelInfoEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectAttemptFailedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.DisconnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.HalfOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.FingerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingFileTransferEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingChatRequestEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.InviteEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.JoinEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.KickEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MotdEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickAlreadyInUseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickChangeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OutputEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NoticeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PartEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OwnerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.QuitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PrivateMessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerPingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerResponseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SuperOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TimeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SocketConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UnknownEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TopicEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VersionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VoiceEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="constructorParamToFieldTest" signature="constructorParamToFieldTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify number of class fields and number of constructor params match">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.WhoisEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- constructorParamToFieldTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ActionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.BanListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ChannelInfoEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectAttemptFailedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.DisconnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.FingerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.HalfOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingFileTransferEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingChatRequestEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.JoinEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.InviteEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.KickEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MotdEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickAlreadyInUseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NoticeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickChangeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OwnerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OutputEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PartEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.QuitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PrivateMessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerPingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerResponseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SocketConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SuperOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UnknownEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TopicEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TimeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VersionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.WhoisEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
        <test-method name="firstConstructorArgBotTest" signature="firstConstructorArgBotTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.events.MassEventTest@2d8f65a4]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:49Z" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.hooks.events.MassEventTest.singleConstructorTest" data-provider="eventObjectDataProvider" description="Verify event has a single constructor">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VoiceEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstConstructorArgBotTest -->
      </class> <!-- org.pircbotx.hooks.events.MassEventTest -->
      <class name="org.pircbotx.hooks.ListenerAdapterTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="56" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="2" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ActionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.BanListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="3" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ChannelInfoEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="2" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectAttemptFailedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="4" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.DisconnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.FingerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.HalfOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingChatRequestEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingFileTransferEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.InviteEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="2" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.JoinEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.KickEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MotdEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="4" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickAlreadyInUseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickChangeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NoticeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OutputEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="2" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OwnerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PartEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="3" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PrivateMessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.QuitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="12" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="4" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="2" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="7" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="5" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerPingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerResponseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="11" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SocketConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SuperOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="6" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TimeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TopicEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UnknownEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="3" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VersionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VoiceEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.WhoisEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericCTCPEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericChannelEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericChannelModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="2" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericChannelModeRecipientEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="1" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericChannelUserEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="3" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericDCCEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="2" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericMessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="9" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="3" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericUserEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="eventImplementTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="eventImplementTest" duration-ms="0" started-at="2015-07-12T21:21:45Z" description="Verify ListenerAdapter has methods for all events" data-provider="eventAllDataProvider" finished-at="2015-07-12T21:21:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericUserModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eventImplementTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="unknownEventTest()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="unknownEventTest" duration-ms="20" started-at="2015-07-12T21:21:45Z" description="Test with an unknown Event to make sure it doesn&#039;t throw an exception" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unknownEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:45Z" finished-at="2015-07-12T21:21:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="usabilityTest()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="usabilityTest" duration-ms="227" started-at="2015-07-12T21:21:45Z" description="Do an actual test with a sample ListenerAdapter" finished-at="2015-07-12T21:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usabilityTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="160" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserModeEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onUserMode(org.pircbotx.hooks.events.UserModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUserMode(org.pircbotx.hooks.types.GenericUserModeEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="31" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectAttemptFailedEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onConnectAttemptFailed(org.pircbotx.hooks.events.ConnectAttemptFailedEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="14" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VersionEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericCTCP(org.pircbotx.hooks.types.GenericCTCPEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onVersion(org.pircbotx.hooks.events.VersionEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="7" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MotdEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onMotd(org.pircbotx.hooks.events.MotdEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="16" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="21" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OutputEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onOutput(org.pircbotx.hooks.events.OutputEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="25" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerResponseEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onServerResponse(org.pircbotx.hooks.events.ServerResponseEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="41" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingChatRequestEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onIncomingChatRequest(org.pircbotx.hooks.events.IncomingChatRequestEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericDCC(org.pircbotx.hooks.types.GenericDCCEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="6" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="28" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onSetTopicProtection(org.pircbotx.hooks.events.SetTopicProtectionEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onRemoveNoExternalMessages(org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onSetChannelKey(org.pircbotx.hooks.events.SetChannelKeyEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="14" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.QuitEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onQuit(org.pircbotx.hooks.events.QuitEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="5" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.JoinEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onJoin(org.pircbotx.hooks.events.JoinEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MessageEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onMessage(org.pircbotx.hooks.events.MessageEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericMessage(org.pircbotx.hooks.types.GenericMessageEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="8" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveModeratedEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onRemoveModerated(org.pircbotx.hooks.events.RemoveModeratedEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onRemoveTopicProtection(org.pircbotx.hooks.events.RemoveTopicProtectionEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="9" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetModeratedEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onSetModerated(org.pircbotx.hooks.events.SetModeratedEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onRemoveSecret(org.pircbotx.hooks.events.RemoveSecretEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="12" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SocketConnectEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onSocketConnect(org.pircbotx.hooks.events.SocketConnectEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="17" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelBanEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onRemoveChannelBan(org.pircbotx.hooks.events.RemoveChannelBanEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="14" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OpEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelModeRecipient(org.pircbotx.hooks.types.GenericChannelModeRecipientEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onOp(org.pircbotx.hooks.events.OpEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUserMode(org.pircbotx.hooks.types.GenericUserModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="36" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OwnerEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onOwner(org.pircbotx.hooks.events.OwnerEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelModeRecipient(org.pircbotx.hooks.types.GenericChannelModeRecipientEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUserMode(org.pircbotx.hooks.types.GenericUserModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="5" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TopicEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onTopic(org.pircbotx.hooks.events.TopicEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="7" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onConnect(org.pircbotx.hooks.events.ConnectEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onRemoveInviteOnly(org.pircbotx.hooks.events.RemoveInviteOnlyEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="8" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.BanListEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onBanList(org.pircbotx.hooks.events.BanListEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="5" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.KickEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onKick(org.pircbotx.hooks.events.KickEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelModeRecipient(org.pircbotx.hooks.types.GenericChannelModeRecipientEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUserMode(org.pircbotx.hooks.types.GenericUserModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="5" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onSetSecret(org.pircbotx.hooks.events.SetSecretEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PingEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onPing(org.pircbotx.hooks.events.PingEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericCTCP(org.pircbotx.hooks.types.GenericCTCPEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="8" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UnknownEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onUnknown(org.pircbotx.hooks.events.UnknownEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ModeEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onMode(org.pircbotx.hooks.events.ModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="20" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onSetPrivate(org.pircbotx.hooks.events.SetPrivateEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="8" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onSetInviteOnly(org.pircbotx.hooks.events.SetInviteOnlyEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="7" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.FingerEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onFinger(org.pircbotx.hooks.events.FingerEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="13" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.DisconnectEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onDisconnect(org.pircbotx.hooks.events.DisconnectEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="25" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PartEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onPart(org.pircbotx.hooks.events.PartEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="18" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickChangeEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onNickChange(org.pircbotx.hooks.events.NickChangeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="9" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserListEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onUserList(org.pircbotx.hooks.events.UserListEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:47Z" finished-at="2015-07-12T21:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:47Z" started-at="2015-07-12T21:21:47Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.HalfOpEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelModeRecipient(org.pircbotx.hooks.types.GenericChannelModeRecipientEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onHalfOp(org.pircbotx.hooks.events.HalfOpEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUserMode(org.pircbotx.hooks.types.GenericUserModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TimeEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericCTCP(org.pircbotx.hooks.types.GenericCTCPEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onTime(org.pircbotx.hooks.events.TimeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="7" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onRemovePrivate(org.pircbotx.hooks.events.RemovePrivateEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="8" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SuperOpEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onSuperOp(org.pircbotx.hooks.events.SuperOpEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelModeRecipient(org.pircbotx.hooks.types.GenericChannelModeRecipientEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUserMode(org.pircbotx.hooks.types.GenericUserModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="11" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onRemoveChannelLimit(org.pircbotx.hooks.events.RemoveChannelLimitEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="10" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerPingEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onServerPing(org.pircbotx.hooks.events.ServerPingEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="6" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ChannelInfoEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onChannelInfo(org.pircbotx.hooks.events.ChannelInfoEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="23" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingFileTransferEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onIncomingFileTransfer(org.pircbotx.hooks.events.IncomingFileTransferEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericDCC(org.pircbotx.hooks.types.GenericDCCEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="6" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NoticeEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onNotice(org.pircbotx.hooks.events.NoticeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericMessage(org.pircbotx.hooks.types.GenericMessageEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.InviteEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onInvite(org.pircbotx.hooks.events.InviteEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="4" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="6" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onSetNoExternalMessages(org.pircbotx.hooks.events.SetNoExternalMessagesEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="8" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.WhoisEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onWhois(org.pircbotx.hooks.events.WhoisEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="5" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="8" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickAlreadyInUseEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onNickAlreadyInUse(org.pircbotx.hooks.events.NickAlreadyInUseEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="4" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelBanEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onSetChannelBan(org.pircbotx.hooks.events.SetChannelBanEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ActionEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericMessage(org.pircbotx.hooks.types.GenericMessageEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onAction(org.pircbotx.hooks.events.ActionEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="9" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onRemoveChannelKey(org.pircbotx.hooks.events.RemoveChannelKeyEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="8" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VoiceEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onVoice(org.pircbotx.hooks.events.VoiceEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelModeRecipient(org.pircbotx.hooks.types.GenericChannelModeRecipientEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericUserMode(org.pircbotx.hooks.types.GenericUserModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="6" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PrivateMessageEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericMessage(org.pircbotx.hooks.types.GenericMessageEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onPrivateMessage(org.pircbotx.hooks.events.PrivateMessageEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method name="onEventTest" signature="onEventTest(java.lang.Class, java.util.Set)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="onEventTestDataProvider" description="Tests onEvent&#039;s completness">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[public void org.pircbotx.hooks.ListenerAdapter.onGenericUser(org.pircbotx.hooks.types.GenericUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onSetChannelLimit(org.pircbotx.hooks.events.SetChannelLimitEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelUser(org.pircbotx.hooks.types.GenericChannelUserEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannelMode(org.pircbotx.hooks.types.GenericChannelModeEvent) throws java.lang.Exception, public void org.pircbotx.hooks.ListenerAdapter.onGenericChannel(org.pircbotx.hooks.types.GenericChannelEvent) throws java.lang.Exception]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onEventTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ActionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.BanListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ChannelInfoEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectAttemptFailedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.FingerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.DisconnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingChatRequestEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.HalfOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.IncomingFileTransferEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.InviteEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.JoinEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.KickEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.MotdEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickAlreadyInUseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NickChangeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.NoticeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OutputEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="2" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.OwnerEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PartEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.PrivateMessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.QuitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="3" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemovePrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.RemoveTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelBanEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerResponseEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.ServerPingEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="4" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelKeyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetChannelLimitEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetInviteOnlyEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetNoExternalMessagesEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetModeratedEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetPrivateEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetSecretEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SetTopicProtectionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SocketConnectEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.SuperOpEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TimeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.TopicEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UnknownEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserListEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="1" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.UserModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VersionEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.WhoisEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericCTCPEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[class org.pircbotx.hooks.events.VoiceEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericChannelModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericChannelEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericDCCEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericChannelModeRecipientEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericMessageEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericChannelUserEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericUserModeEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method name="throwsExceptionTest" signature="throwsExceptionTest(java.lang.Class)[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" status="PASS" duration-ms="0" finished-at="2015-07-12T21:21:48Z" started-at="2015-07-12T21:21:48Z" depends-on-methods="org.pircbotx.hooks.ListenerAdapterTest.eventImplementTest" data-provider="eventAllDataProvider" description="Verify all methods in ListenerAdapter throw an exception">
          <params>
            <param index="0">
              <value>
                <![CDATA[interface org.pircbotx.hooks.types.GenericUserEvent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwsExceptionTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.hooks.ListenerAdapterTest@305fd85d]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:48Z" finished-at="2015-07-12T21:21:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- org.pircbotx.hooks.ListenerAdapterTest -->
      <class name="org.pircbotx.PircBotXConnectTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="setUp" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="botProvider()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="botProvider" is-config="true" duration-ms="2" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botProvider -->
        <test-method status="PASS" signature="connectNoCapTest()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectNoCapTest" duration-ms="7" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- connectNoCapTest -->
        <test-method status="PASS" signature="connectTest()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectTest" duration-ms="3" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- connectTest -->
        <test-method status="PASS" signature="botProvider()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="botProvider" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botProvider -->
        <test-method status="PASS" signature="connectTestWithUnknownCap()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectTestWithUnknownCap" duration-ms="2" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.PircBotXConnectTest.connectTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- connectTestWithUnknownCap -->
        <test-method status="PASS" signature="botProvider()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="botProvider" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botProvider -->
        <test-method status="PASS" signature="botProvider()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="botProvider" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botProvider -->
        <test-method status="PASS" signature="connectWithDifferentPortTest()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectWithDifferentPortTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.PircBotXConnectTest.connectTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- connectWithDifferentPortTest -->
        <test-method status="PASS" signature="botProvider()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="botProvider" is-config="true" duration-ms="1" started-at="2015-07-12T21:21:49Z" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- botProvider -->
        <test-method status="PASS" signature="connectWithPasswordTest()[pri:0, instance:org.pircbotx.PircBotXConnectTest@2781e022]" name="connectWithPasswordTest" duration-ms="1" started-at="2015-07-12T21:21:49Z" depends-on-methods="org.pircbotx.PircBotXConnectTest.connectTest" finished-at="2015-07-12T21:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- connectWithPasswordTest -->
      </class> <!-- org.pircbotx.PircBotXConnectTest -->
      <class name="org.pircbotx.output.OutputSplitTest">
        <test-method status="PASS" signature="sendRawLineSplit()[pri:0, instance:org.pircbotx.output.OutputSplitTest@1b68ddbd]" name="sendRawLineSplit" duration-ms="9" started-at="2015-07-12T21:21:46Z" finished-at="2015-07-12T21:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendRawLineSplit -->
        <test-method status="PASS" signature="setup()[pri:0, instance:org.pircbotx.output.OutputSplitTest@1b68ddbd]" name="setup" is-config="true" duration-ms="0" started-at="2015-07-12T21:21:46Z" finished-at="2015-07-12T21:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- org.pircbotx.output.OutputSplitTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
